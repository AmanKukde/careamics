# TODO: Vera test if parameter parent_config could work

# TODO: no run_params, just direct parameters to config
run_params:
  # c: empty not allowed
  experiment_name: test2

  # c: parent should exist
  workdir: test

  # Optional/hidden
  # c: should exist in the workdir (relative path) or is absolute path
  trained_model: test1_latest.pth

algorithm:
  # Optional
  # c: corresponds to an enum of supported losses
  # TODO what to do for custom?
  loss: [n2v]

  # Optional
  # c: enum of supported pixel masking strategies
  # rename pixel masking strategy
  pixel_manipulation: default

  # Optional
  # c: float between 0.1 and 20.
  # Number of pixels to mask.
  mask_pixel_percentage: 0.2

  # Class name from models.py
  # c: enum of supported models
  model: UNet

  # c: true or false
  # yes/no?
  # instead of conv_dims
  3D: True

  # Optional
  # dict
  model_parameters:
    # c: int betwen 1 and 10
    depth: 2

    # c: power of 2
    num_filter_base: 96

# Optional
training:
  # c: int >= 1
  num_epochs: 500

  optimizer:
    # c: enum
    name: Adam

    # Optional
    parameters:
      lr: 0.0004

  lr_scheduler:
    # c: enum
    name: ReduceLROnPlateau

    # Optional
    parameters:
      mode: min

  # c: enum [random, sequential]
  extraction_strategy: random

  # c: divisible by 2, 2D or 3D tuple
  patch_size: [64, 64]

  # c: int ge 1
  batch_size: 128

  # c: true/false
  # TODO: add to board as feature, maybe to support list of augmentations
  augmentation: True

  # Optional
  # c: true/false
  use_wandb: True

  # Optional
  # c: ge 0
  num_workers: 0

  # Optional
  # c: true/false
  amp:
    # c: true/false
    use: false

    # Optional
    # c: power of 2
    # see torch for explanations and better constraints
    # link the torch doc in the configuration description
    init_scale: 1024

data:
  # c: absolute path or relative to workdir
  # c: has a zarr or tiff (need to exist)
  training_path: data/

  # Optional
  # c: absolute path or relative to workdir
  # c: has a zarr or tiff (need to exist)
  validation_path: data/

  # Optional
  # c: absolute path or relative to workdir
  # c: has a zarr or tiff (need to exist)
  prediction_path: data/

  # c: enum
  data_format: npy

  # TODO: check OME axes
  # c: among STCZYX with constraints on order
  axes: SYX

# Optional
# TODO add prediction batching to backlog
prediction:
  # Optional
  # c: 2D or 3D, divisible by 2
  tile_shape: (64, 64)

  # Optional
  # c: 2D or 3D, same dim as tile_shape, divisible by 2
  # TODO: how to get receptive field and validate overlap from model depth
  overlap: [48, 48]
